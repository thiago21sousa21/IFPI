a) Mostrar todos os CDs
SELECT * FROM cd;

b) Mostrar os campos nome e data da compra dos CDs ordenados por nome
SELECT nome, dataCompra As 'data da compra' 
FROM cd
ORDER BY nome;

c) Mostrar os campos nome e data da compra dos CDs classificados por data de compra em
ordem decrescente
SELECT nome, dataCompra As 'data da compra' 
FROM cd
ORDER BY dataCompra DESC;

d) Mostrar o total gasto com a compra dos CDs
SELECT SUM(valorPago)
FROM cd;

e) Mostrar todas as músicas (todos os campos) do CD com o código 1
SELECT * 
FROM musica
WHERE codigoCd = 1;

f) Mostrar o nome do CD e o nome das músicas de todos CDs
SELECT cd.nome AS 'nome do cd' , musica.nome AS 'nome da musica'
FROM musica
JOIN cd ON musica.codigoCd = cd.codigo;
-- where cd.codigo =1;

g) Mostrar o nome e o artista de todas as músicas cadastradas
SELECT musica.nome, cd.artista
FROM musica
JOIN cd ON musica.codigoCd = cd.codigo;

h) Mostrar o tempo total de músicas cadastradas
SELECT SUM(duracao) AS tempo_total
FROM musica;

i) Mostrar o número, nome e tempo das músicas do CD com o código 5 por ordem de
número
SELECT numero, nome, duracao AS 'tempo da musica'
FROM musica 
WHERE codigoCd = 5;


j) Mostrar o número, nome e tempo das músicas do CD com o nome “Reginaldo Rossi –
Perfil” por ordem de nome
 SELECT numero, cd.nome ,duracao AS 'tempo_musicaCD_nome'  
 FROM musica  
 JOIN cd ON musica.codigoCd = cd.codigo 
 WHERE cd.nome ='Reginaldo Rossi – Perfil'; 

k) Mostrar o tempo total de músicas por CD 
 SELECT cd.codigo, SUM(duracao) AS tempo_total 
 FROM musica m
 JOIN cd ON cd.codigo = m.codigoCd
 GROUP BY cd.codigo;


l) Mostrar a quantidade de músicas cadastradas
SELECT COUNT(*) AS quantidade_musicas
FROM musica;


m) Mostrar a média de duração das músicas cadastradas
SELECT AVG(duracao) AS duracao
FROM musica

n) Mostrar a quantidade de CDs
SELECT COUNT(*) AS quantidade_CDs
FROM cd;


o) Mostrar o nome das músicas do artista Reginaldo Rossi
SELECT musica.nome, cd.artista
FROM musica
JOIN cd ON cd.codigo = musica.codigoCd
WHERE cd.artista LIKE '%Reginaldo%';

p) Mostrar a quantidade de músicas por CDs
SELECT cd.nome , COUNT(musica.numero) AS quantidade_musica
FROM musica
JOIN cd ON musica.codigoCd = cd.codigo
GROUP BY cd.codigo;

q) Mostrar o nome de todos os CDs comprados no “Submarino.com”
SELECT nome, localCompra 
FROM cd
WHERE LOWER(localCompra) LIKE '%submarino.com%';

r) Mostrar o nome do CD e o nome da primeira música de todos os CDs
SELECT 
    c.nome AS nome_cd, 
    (SELECT m.nome
     FROM musica m
     WHERE m.codigoCd = c.codigo
     ORDER BY m.numero ASC
     LIMIT 1) AS primeira_musica
FROM 
    cd c;
    
s) Mostrar uma listagem de músicas em ordem alfabética
SELECT m.nome
FROM musica m
ORDER BY m.nome ASC;

t) Mostrar todos os CDs que são álbuns
SELECT c.nome, c.album
FROM cd c
WHERE c.album = 's';

u) Mostrar o CD que custou mais caro
SELECT nome, valorPago AS cd_mais_caro
FROM cd
WHERE valorPago = (SELECT MAX(valorPago) FROM cd);

SELECT nome, valorPago AS cd_mais_caro
FROM cd
ORDER BY valorPago DESC
LIMIT 1;

v) Mostrar os CDs comprados em julho de 2014
SELECT nome, dataCompra
FROM cd
WHERE dataCompra BETWEEN '2014-07-01' AND '2014-07-31';

SELECT nome, dataCompra
FROM cd
WHERE dataCompra >= '2014-07-01' AND  dataCompra <= '2014-07-31';

SELECT nome, dataCompra
FROM cd
WHERE dataCompra LIKE '2023-10%';

SELECT nome, dataCompra
FROM cd
WHERE YEAR(dataCompra) = 2023 AND MONTH(dataCompra) = 10;

w) Mostrar os CDs cujo valor pago esteja entre R$ 30,00 e R$ 50,00
SELECT nome, valorPago
FROM cd
WHERE valorPago BETWEEN 30 AND 50;

SELECT nome, valorPago
FROM cd
WHERE valorPago >= 30 AND valorPago <= 50;

x) Mostrar as musicas dos CDs com código 1, 3 e 6
SELECT nome, codigoCd
FROM musica
WHERE codigoCd = 1 OR codigoCd = 3 OR codigoCd = 6;

SELECT nome, codigoCd
FROM musica
WHERE codigoCd IN (1,3,6);

SELECT musica.nome, codigoCd
FROM musica
JOIN cd ON cd.codigo = musica.codigoCd
WHERE cd.codigo IN (1,3,6);

y) Mostrar o CD que tem a maior quantidade de músicas cadastradas
SELECT cd.nome, musica.codigoCd, COUNT(*) AS total_musicas
FROM musica 
JOIN cd ON cd.codigo = musica.codigoCd
GROUP BY musica.codigoCd
ORDER BY total_musicas DESC
LIMIT 1;

z) Mostrar o artista que possui a maior quantidade de CDs cadastrados
SELECT artista, COUNT(*) AS total_cds
FROM cd
GROUP BY artista
ORDER BY total_cds DESC
LIMIT 1;

SELECT artista, COUNT(*) AS total_cds
FROM cd
GROUP BY artista
HAVING COUNT(*) = (
    SELECT MAX(qtd)
    FROM (
        SELECT COUNT(*) AS qtd
        FROM cd
        GROUP BY artista
    ) AS sub
);
